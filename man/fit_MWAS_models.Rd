% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_MWAS_models.R
\name{fit_MWAS_models}
\alias{fit_MWAS_models}
\title{Build Prediction Model for Methylation Sites}
\usage{
fit_MWAS_models(
  BSobj,
  methInput,
  window_sizes,
  chunk1,
  chunk2,
  n_fold,
  scaffoldIdentifier,
  outdir,
  alphas,
  save_evaluation_results_each_fold,
  save_glmnet_object,
  cores_per_alpha,
  num_cores,
  allow_inefficient_parallelization,
  cv_eval_mode = "dynamic",
  verbose = FALSE,
  ...
)
}
\arguments{
\item{BSobj}{A BSseq object containing methylation data.}

\item{methInput}{A MethylationInput object containing SNP and methylation data.}

\item{window_sizes}{A vector of integers representing the sizes of windows surrounding methylation sites.}

\item{chunk1}{The starting index of methylation sites to process.}

\item{chunk2}{The ending index of methylation sites to process.}

\item{n_fold}{Integer, the number of folds for cross-validation.}

\item{scaffoldIdentifier}{Character, a unique identifier for the scaffold being processed.}

\item{outdir}{Character, directory path to save the output files.}

\item{alphas}{Numeric vector, specifying the alpha values to iterate over in tuning.}

\item{cores_per_alpha}{Can be "all" or 1. "all" uses all cores for parallel processing
within cv.glmnet (default setting). 1 uses all cores for parallel
processing of alpha values.}

\item{num_cores}{Integer, specifying the number of cores to use. Defaults to all
available cores if not provided.}

\item{allow_inefficient_parallelization}{Logical, allows inefficient parallelization
when cores_per_alpha is 1 and there are
more available cores than alpha values.
Default is FALSE.}

\item{verbose}{Logical, indicating whether to print detailed tuning results.}

\item{...}{Additional arguments passed to \code{glmnet_tune_alpha} and \code{cv_eval}.}
}
\value{
An object of class MethylationScaff containing the fitted models.
}
\description{
Constructs models to predict methylation as a function of single-nucleotide polymorphisms (SNPs)
across different window sizes surrounding methylation sites. The function processes a range of
methylation sites, fits a model for each, and compiles the results into a MethylationScaff object.
}
\examples{
\dontrun{
build_prediction_model(BSobj, methInput, c(1000, 2000), 1, 10, 5, "double", "scaffold1", tempdir(), TRUE)
}

}
